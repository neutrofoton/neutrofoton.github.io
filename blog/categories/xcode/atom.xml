<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Xcode | neutrofoton]]></title>
  <link href="http://neutrofoton.github.io/blog/categories/xcode/atom.xml" rel="self"/>
  <link href="http://neutrofoton.github.io/"/>
  <updated>2016-03-09T16:14:11+08:00</updated>
  <id>http://neutrofoton.github.io/</id>
  <author>
    <name><![CDATA[neutro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Create iOS Ipa for In-House Distribution]]></title>
    <link href="http://neutrofoton.github.io/blog/2016/03/09/create-ios-ipa-for-in-house-distribution/"/>
    <updated>2016-03-09T00:10:44+08:00</updated>
    <id>http://neutrofoton.github.io/blog/2016/03/09/create-ios-ipa-for-in-house-distribution</id>
    <content type="html"><![CDATA[<p>Couple of month ago in the era of iphone 6, the company I work for was officially migrate official mobile device from BlackBerry to iphone 6. By the time of migration, development team also got initiative request from users to create an app for android. On the other hand, we also want to anticipate another request for ios platform. To simplify the porting to another platform, we use <a href="https://en.wikipedia.org/wiki/HTML5">HTML5</a>, <a href="http://www.telerik.com/kendo-ui"/>Kendo UI</a> and <a href="https://cordova.apache.org/">Apache Cordova</a> to build the app. The app just consumes data from REST services. The other requirement is the app will not be published to App Store. We have internal mobile device management (MDM) called <a href="https://www.mobileiron.com/"/>MobileIron</a>.</p>

<p>In this post, I will not write about how to build the app with Apache Cordova, I just want to focus on how to create ipa distribution package for in house enterprise distribution. The steps should be the same for app that is created with native. I also will not discuss about how to deploy to MDM.</p>

<p>The first requirement is we have to be a member of <a href="https://developer.apple.com/programs/enterprise/">iOS Developer Enterprise Program</a> which costs $299. The steps how to register is clearly explained in apple developer site.</p>

<p>At the time of write this post, my development environment :</p>

<ol type="1">
<li> OS X El Capitan (10.11.3)</li>
<li>Xcode (7.2)</li>
<li>iphone 6 (iOS 9.2)</li>
</ol>


<p>Before we start create ipa package, ensure our code runs well as expected on iphone simulator.</p>

<p>The steps of creating ipa package for distribution basically similar to deploying to real device for development as explained on <a href="/blog/2016/03/08/deploying-ios-app-to-real-device/">my previous post</a>.
In this post, I will only capture the things that are difference between them.</p>

<h2>Certificate</h2>


<p>While creating certificate preparation in <a href="https://developer.apple.com/account/ios/certificate/create">Apple Developer</a> portal, showed its slightly difference from <a href="/blog/2016/03/08/deploying-ios-app-to-real-device/">my previous post</a>
<img class="center" src="/images/post/2016-03-09-pic01.png"></p>

<p>In this case, I choose <code>In-House and Ad Hoc </code> distribution option instead of <code>iOS App Development</code>, since we plan to create ipa package for In House distribution. If we notice upon the above screenshot, in the <code>Production</code> section has option for <code>In-House and Ad Hoc </code> distribution. Meanwhile on <a href="/blog/2016/03/08/deploying-ios-app-to-real-device/">my previous post</a> has <code>App Store and Ad Hoc</code>. The difference because of the apple id I used on this post is enrolled as an <a href="https://developer.apple.com/programs/enterprise/">iOS Developer Enterprise Program</a>, and on <a href="/blog/2016/03/08/deploying-ios-app-to-real-device/">my previous post</a> uses Individual Apple Developer Program. The detail difference between them and other developer license schema can found <a href="https://developer.apple.com/support/compare-memberships/">here</a>.</p>

<p>The rest of preparing certificate installation for production is the same as <a href="/blog/2016/03/08/deploying-ios-app-to-real-device/">certificate installation for development</a>.</p>

<h2>App IDs</h2>


<p>The step of registering app <code>Bundle ID</code> is the same as <a href="/blog/2016/03/08/deploying-ios-app-to-real-device/">the previous post</a>. If we already registered for development, we should not do it again.</p>

<h2>Provisioning Profiles</h2>


<p>Creating provisioning also similar to the creation Provisioning for Development. Except at the wizard option we need to choose one of in the <code>Distribution</code> group instead of <code>Development</code> group. In this sample I select <code>In House</code>, since the ipa package we created will be deployed via MDM.</p>

<p><img class="center" src="/images/post/2016-03-09-pic02.png"></p>

<p>The next step is opening Xcode and add apple id via Xcode <code>Proferences > Accounts</code> as I did on <a href="/blog/2016/03/08/deploying-ios-app-to-real-device/">previous post</a>.
Now we should get the similar picture as follow.</p>

<p><img class="center" src="/images/post/2016-03-09-pic03.png"></p>

<p>Ensure <code>distribution profile</code> already downloaded. If not we can click download button on the list above of picture.</p>

<p>The next thing is opening iOS project with Xcode and ensuring we select <code>Distribution Profile</code> we installed on <code>Code signing</code> section group both on <code>Project</code> and <code>Target</code>.</p>

<p><img class="center" src="/images/post/2016-03-09-pic04.png">
<img class="center" src="/images/post/2016-03-09-pic05.png"></p>

<p>The next step is select <code>Product</code> menu > <code>Archive</code>, then follow the wizard.</p>

<p><img class="center" src="/images/post/2016-03-09-pic06.png">
<img class="center" src="/images/post/2016-03-09-pic07.png">
<img class="center" src="/images/post/2016-03-09-pic08.png">
<img class="center" src="/images/post/2016-03-09-pic09.png">
<img class="center" src="/images/post/2016-03-09-pic10.png"></p>

<p>When the wizard finish, by default Xcode will create ipa package for us on desktop.</p>

<p>That&rsquo;s all my share and thanks for reading :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode Failed to Download Use the Purchases Page to Try Again]]></title>
    <link href="http://neutrofoton.github.io/blog/2013/09/24/xcode-failed-to-download-use-the-purchases-page-to-try-again/"/>
    <updated>2013-09-24T15:56:27+08:00</updated>
    <id>http://neutrofoton.github.io/blog/2013/09/24/xcode-failed-to-download-use-the-purchases-page-to-try-again</id>
    <content type="html"><![CDATA[<p>The following day after the release of iOS 7, I started update my iphone 4s to get to know how exactly the ios 7 is. My iphone successfully updated even though it was quite annoying with slow internet connection :( .</p>

<p>The next thing is updating my Xcode, since I got a notification to update my xcode from version 4.6.3 to version 5.0 via app store of version 1.2.2. My OSX version is 10.8.5.
While updatig process, several times I got error message <code>Xcode failed to download use the purchases page to try again</code>, and my download prosess suddenly stopped. Googling on internet and asking forum got many different suggestion and solution. Thankfully one of them success that is by clearing appstore download cache.</p>

<p>The steps to get things to work are quite simple.</p>

<ol>
<li>
Keep the AppStore App open. Open terminal and type
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /private/var/folders/
</span></code></pre></td></tr></table></div></figure>

Once there, search for com.apple.appstore
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>find . <span class="p">|</span> grep com.apple.appstore
</span></code></pre></td></tr></table></div></figure>
You will find folder structure like this <code>./40/lhn22jn901zdw2bpf82hkggw0000gn/C/com.apple.appstore</code>

</li>

<li>
Once inside the folder, open it in finder
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>open .
</span></code></pre></td></tr></table></div></figure>
</li>
<li>
While keeping AppStore open, remove this folder
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rm -rf *
</span></code></pre></td></tr></table></div></figure>
</li>
<li>
Now, go back to AppStore and click on Download again.
</li>
<li>
If download/update disappear, close the appstore then reopen it.
 </li>
</ol>


<p>That steps worked well to me. Good luck and have a nice day.</p>

<h4>References</h4>


<ol type="1">
  <li>http://apple.stackexchange.com/questions/61646/xcode-failed-to-download-use-the-purchases-page-to-try-again/71202#71202</li>
</ol>

]]></content>
  </entry>
  
</feed>
